
##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

##
# limit # of Requests to Login : 
# http://nginx.org/en/docs/http/ngx_http_limit_req_module.html
##
limit_req_zone $binary_remote_addr zone=severin.jp:10m rate=1r/s;


##
# Redirect www to the main site. We use a separate server statement and NOT an if statement - see http://wiki.nginx.org/IfIsEvil
##
server {
	server_name www.resume.severin.jp;
	return 301 $scheme://resume.severin.jp$request_uri;
}

# REDIRECT HTTP TO HTTPS and set default server for listen port
server {
    listen 80 default_server;
    #listen [::]:80 default_server; ## no IPv6 at this time
    server_name *.severin.jp;

    # Discourage deep links by using a permanent redirect to home page of HTTPS site
    #return 301 https://$host;

    # Alternatively, redirect all HTTP links to the matching HTTPS page
    return 301 https://$host$request_uri;
}


##
# Root Site : HTTPS : resume.severin.jp
##
server {

        listen	443 ssl default_server; ## listen for ipv4; this line is default and implied
        #listen   [::]:443 default_server ipv6only=on; ## listen for ipv6

        # Get SSL setup
        ssl                 on;
        ssl_certificate     /etc/letsencrypt/live/pi.severin.jp/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/pi.severin.jp/privkey.pem;
	ssl_session_timeout 5m;
        ssl_session_cache         shared:SSL:50m;

 	# Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
 	# Generate with:
 	#   openssl dhparam -out /etc/nginx/dhparam.pem 2048
	ssl_dhparam /etc/nginx/dhparam.pem;
        
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers	'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
        ssl_prefer_server_ciphers on;

	# Enable HSTS ( see http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security ) (ngx_http_headers_module is required) (15768000 seconds = 6 months)
        #add_header Strict-Transport-Security max-age=15768000;
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # OCSP Stapling
        ssl_stapling            on;
        ssl_stapling_verify     on;
        ssl_trusted_certificate /etc/letsencrypt/live/pi.severin.jp/fullchain.pem;
        resolver                8.8.8.8;

	### NOW CONFIGURE YOUR SITE BELOW

        root /web/resume.severin.jp/www;
        index index.html index.htm;

        # Make site accessible from http://mysite.com.local/
        server_name resume.severin.jp.local resume.severin.jp pi.resume.severin.jp;

        # add log configuration
        error_log /web/resume.severin.jp/logs/error.log error;
        access_log /web/resume.severin.jp/logs/access.log;

        # include global files for php wordpress
        include global/restrictions.conf;

        # include global file for LetsEncrypt
        include global/letsencrypt.conf;
	
	#error_page 404 /404.html;

	# location directices
	
	# try url with and without trailing slash, try to append .html to find html files
	location / {
    		try_files $uri $uri/ $uri.html =404;
	}

	# Directives to send expires headers and turn off 404 error logging.
	location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
		expires 24h;
		log_not_found off;
	}

}


